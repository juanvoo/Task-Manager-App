version: '3.8'

services:
  # Base de datos PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: taskmanager_db
    environment:
      POSTGRES_DB: taskmanager
      POSTGRES_USER: taskuser
      POSTGRES_PASSWORD: taskpass
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - taskmanager_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U taskuser -d taskmanager"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend con Flask
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: taskmanager_backend
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://taskuser:taskpass@db:5432/taskmanager
      - SECRET_KEY=your-secret-key-change-in-production
      - JWT_SECRET_KEY=your-jwt-secret-key-change-in-production
    volumes:
      - ./backend:/app
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - taskmanager_network
    command: ["python", "run.py"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend con Nginx
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: taskmanager_frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - taskmanager_network

volumes:
  postgres_data:

networks:
  taskmanager_network:
    driver: bridge
